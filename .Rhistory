# 3
# Each row in matrix p ~ 1 value of k, wrong, should be scalar
Y  <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
K  <- dexp(seq(0, 5, 0.01))
mu <- 2.39
Von.Mises <- function (y, mu, k){
exp(k*cos(y - mu)) / (2*pi*besselI(k, 0))
}
likelihood <- function (k) { prod(Von.Mises(Y, mu, k)) }
posterior  <- function (k) { likelihood(k) * k } #?
plot(K)
plot(sapply(K, likelihood))
plot(sapply(K, posterior))
plot(Von.Mises(Y, mu, 0), ylim = c(0,4))
points(Y)
# Sebas kvÃ¤llsmeck
Y          <- c(-2.44, 2.14, 2.54, 1.83, 2.02, 2.33, -2.79, 2.23, 2.07, 2.02)
mu         <- 2.39
lambda     <- 1
kappas     <- seq(0, 10, 0.05)
likelihood <- sapply(kappas, function (k) { prod(Von.Mises(Y, mu, k)) })
prior      <- dexp(kappas, lambda)
posterior  <- likelihood * prior
plot(posterior, col = 'orange', type = 'l')
kappas[which.max(posterior)]
plot(kappas, type ='l', col = 'green')
lines(sapply(kappas, likelihood), col = 'blue')
plot(posterior, col = 'orange', type = 'l')
kappas[which.max(posterior)]
#plot(kappas, type ='l', col = 'green')
#lines(sapply(kappas, likelihood), col = 'blue')
plot(Von.Mises(Y,mu,2.1))
plot(posterior, col = 'orange', type = 'l')
